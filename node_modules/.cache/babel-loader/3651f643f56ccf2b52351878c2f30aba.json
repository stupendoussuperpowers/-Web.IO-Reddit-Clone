{"ast":null,"code":"import _classCallCheck from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\-Web.IO-Reddit-Clone\\\\src\\\\Something.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { redditconn } from './App';\nimport Post from './components/Post';\n\nvar Something =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Something, _Component);\n\n  function Something(props) {\n    var _this;\n\n    _classCallCheck(this, Something);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Something).call(this, props));\n    _this.state = {\n      posts: [],\n      subreddit: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Something, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      redditconn.api.get('/r/UnethicalLifeProTips/best', {}).then(function (data) {\n        console.log(data[1].data.children);\n\n        _this2.setState({\n          posts: data[1].data.children\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"SubReddit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"post-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Posts\"), React.createElement(\"div\", {\n        className: \"main-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Post-List\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.state.posts.map(function (val, ind) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Post, {\n          content: val.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      }), React.createElement(Post, {\n        content: \"jon snow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Something;\n}(Component);\n\nexport default withRouter(Something);","map":{"version":3,"sources":["E:/-Web.IO-Reddit-Clone/src/Something.js"],"names":["React","Component","withRouter","redditconn","Post","Something","props","state","posts","subreddit","api","get","then","data","console","log","children","setState","map","val","ind","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,UAAR,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;IAEMC,S;;;;;AAEF,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,SAAS,EAAG;AAFH,KAAb;AAFc;AAMjB;;;;wCAEkB;AAAA;;AACfN,MAAAA,UAAU,CAACO,GAAX,CAAeC,GAAf,CAAmB,8BAAnB,EAAmD,EAAnD,EAAuDC,IAAvD,CACI,UAAAC,IAAI,EAAI;AACJC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaG,QAAzB;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACT,UAAAA,KAAK,EAAEK,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaG;AAArB,SAAd;AACH,OAJL;AAMH;;;6BAEO;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADI,EAEJ;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGM,KAAKT,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqB,UAASC,GAAT,EAAcC,GAAd,EAAkB;AACnC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,OAAO,EAAID,GAAG,CAACE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH,OAND,CAHN,EAYE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF,CAFI,CADJ;AAqBH;;;;EAzCmBpB,S;;AA4CxB,eAAeC,UAAU,CAACG,SAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {redditconn} from './App'\r\nimport Post from './components/Post';\r\n\r\nclass Something extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n            subreddit : \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        redditconn.api.get('/r/UnethicalLifeProTips/best', {}).then(\r\n            data => {\r\n                console.log(data[1].data.children);\r\n                this.setState({posts: data[1].data.children});\r\n            }\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"SubReddit\">\r\n        <h2 className=\"post-head\">Posts</h2>\r\n        <div className=\"main-wrapper\">\r\n          <div className=\"Post-List\">\r\n\r\n            {\r\n                this.state.posts.map(function(val, ind){\r\n                    return (\r\n                        <div>\r\n                            <Post content = {val.title} />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n            <Post content=\"jon snow\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default withRouter(Something);"]},"metadata":{},"sourceType":"module"}