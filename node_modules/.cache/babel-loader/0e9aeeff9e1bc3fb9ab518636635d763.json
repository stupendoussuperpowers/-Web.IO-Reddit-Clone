{"ast":null,"code":"import _classCallCheck from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\-Web.IO-Reddit-Clone\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextPage from \"./TextPage\";\nimport \"./styles/styles.css\";\nimport * as RedditAPI from 'reddit-wrapper-v2';\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport PhotoPage from \"./PhotoPage\";\nexport var redditconn = RedditAPI({\n  username: process.env.REACT_APP_REDDIT_USERNAME,\n  password: process.env.REACT_APP_REDDIT_PASSWORD,\n  app_id: process.env.REACT_APP_APP_ID,\n  api_secret: process.env.REACT_APP_API_SECRET,\n  retry_on_wait: true,\n  retry_on_server_error: 5,\n  retry_delay: 1,\n  logs: true\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      desc: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      redditconn.api.get('/r/LifeProTips/about', {}).then(function (data) {\n        console.log(\"Subreddit\", data[1].data);\n\n        _this2.setState({\n          desc: data[1].data.public_description,\n          icon: data[1].data.community_icon,\n          subreddit: data[1].data.title,\n          subs: data[1].data.subscribers\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/textpage\",\n        exact: true,\n        component: TextPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/:subreddit/comments/:id\",\n        exact: true,\n        component: function component(props) {\n          return React.createElement(PhotoPage, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["E:/-Web.IO-Reddit-Clone/src/App.js"],"names":["React","Navbar","TextPage","RedditAPI","Route","BrowserRouter","Router","Switch","PhotoPage","redditconn","username","process","env","REACT_APP_REDDIT_USERNAME","password","REACT_APP_REDDIT_PASSWORD","app_id","REACT_APP_APP_ID","api_secret","REACT_APP_API_SECRET","retry_on_wait","retry_on_server_error","retry_delay","logs","App","props","state","desc","api","get","then","data","console","log","setState","public_description","icon","community_icon","subreddit","title","subs","subscribers","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,qBAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;AACA,SAASC,KAAT,EAAgBC,aAAa,IAAIC,MAAjC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,IAAMC,UAAU,GAAGN,SAAS,CAAC;AAClCO,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,yBADY;AAElCC,EAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,yBAFY;AAGlCC,EAAAA,MAAM,EAAGL,OAAO,CAACC,GAAR,CAAYK,gBAHa;AAIlCC,EAAAA,UAAU,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJU;AAKlCC,EAAAA,aAAa,EAAE,IALmB;AAMlCC,EAAAA,qBAAqB,EAAE,CANW;AAOlCC,EAAAA,WAAW,EAAE,CAPqB;AAQlCC,EAAAA,IAAI,EAAE;AAR4B,CAAD,CAA5B;;IAYeC,G;;;;;AAEpB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFiB;AAKlB;;;;wCAEkB;AAAA;;AACjBlB,MAAAA,UAAU,CAACmB,GAAX,CAAeC,GAAf,CAAmB,sBAAnB,EAA2C,EAA3C,EAA+CC,IAA/C,CAAqD,UAAAC,IAAI,EAAI;AAC3DC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAjC;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAACP,UAAAA,IAAI,EAAEI,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaI,kBAApB;AACZC,UAAAA,IAAI,EAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaM,cADR;AAEZC,UAAAA,SAAS,EAAEP,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaQ,KAFZ;AAGdC,UAAAA,IAAI,EAAET,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaU;AAHL,SAAd;AAID,OAND;AAQD;;;6BAEO;AACN,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,WAAd;AAA0B,QAAA,KAAK,MAA/B;AAAgC,QAAA,SAAS,EAAIvC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAG,0BAAd;AAAyC,QAAA,KAAK,MAA9C;AAA+C,QAAA,SAAS,EAAI,mBAACuB,KAAD;AAAA,iBAAW,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADA,CAFF,CADF;AAWD;;;;EAhC+BzB,KAAK,CAAC0C,S;;SAAlBlB,G","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TextPage from \"./TextPage\";\r\nimport \"./styles/styles.css\";\r\nimport * as RedditAPI from 'reddit-wrapper-v2';\r\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport PhotoPage from \"./PhotoPage\"\r\n\r\nexport const redditconn = RedditAPI({\r\n  username: process.env.REACT_APP_REDDIT_USERNAME,\r\n  password: process.env.REACT_APP_REDDIT_PASSWORD,\r\n  app_id : process.env.REACT_APP_APP_ID,\r\n  api_secret: process.env.REACT_APP_API_SECRET,\r\n  retry_on_wait: true,\r\n  retry_on_server_error: 5,\r\n  retry_delay: 1,\r\n  logs: true\r\n});\r\n\r\n\r\nexport default class  App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      desc: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    redditconn.api.get('/r/LifeProTips/about', {}).then( data => {\r\n      console.log(\"Subreddit\", data[1].data);\r\n      this.setState({desc: data[1].data.public_description, \r\n        icon : data[1].data.community_icon, \r\n        subreddit: data[1].data.title,\r\n      subs: data[1].data.subscribers });\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <Router>\r\n        <Switch>\r\n        <Route path = \"/textpage\" exact component = {TextPage} />\r\n        <Route path = \"/:subreddit/comments/:id\" exact component = {(props) => <PhotoPage {...props}/>} />\r\n        </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}