{"ast":null,"code":"import _classCallCheck from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\-Web.IO-Reddit-Clone\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport PostCard from \"./components/SubReddit/PostCard\";\nimport SubInfo from \"./components/SubReddit/SubInfo\";\nimport \"./styles/styles.css\";\nimport * as RedditAPI from 'reddit-wrapper-v2';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      desc: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var redditconn = RedditAPI({\n        username: process.env.REACT_APP_REDDIT_USERNAME,\n        password: process.env.REACT_APP_REDDIT_PASSWORD,\n        app_id: process.env.REACT_APP_APP_ID,\n        api_secret: process.env.REACT_APP_API_SECRET,\n        retry_on_wait: true,\n        retry_on_server_error: 5,\n        retry_delay: 1,\n        logs: true\n      });\n      redditconn.api.get('/r/LifeProTips/about', {}).then(function (data) {\n        console.log(\"Subreddit\", data[1].data.description);\n\n        _this2.setState({\n          desc: data[1].data.description\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"post-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(PostCard, {\n        key: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(SubInfo, {\n        heading: \"About Community\",\n        content: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(SubInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["E:/-Web.IO-Reddit-Clone/src/App.js"],"names":["React","Navbar","PostCard","SubInfo","RedditAPI","App","props","state","desc","redditconn","username","process","env","REACT_APP_REDDIT_USERNAME","password","REACT_APP_REDDIT_PASSWORD","app_id","REACT_APP_APP_ID","api_secret","REACT_APP_API_SECRET","retry_on_wait","retry_on_server_error","retry_delay","logs","api","get","then","data","console","log","description","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAO,qBAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;;IAEsBC,G;;;;;AAEpB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFiB;AAKlB;;;;wCAEkB;AAAA;;AACjB,UAAIC,UAAU,GAAGL,SAAS,CAAC;AACzBM,QAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,yBADG;AAEzBC,QAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,yBAFG;AAGzBC,QAAAA,MAAM,EAAGL,OAAO,CAACC,GAAR,CAAYK,gBAHI;AAIzBC,QAAAA,UAAU,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJC;AAKzBC,QAAAA,aAAa,EAAE,IALU;AAMzBC,QAAAA,qBAAqB,EAAE,CANE;AAOzBC,QAAAA,WAAW,EAAE,CAPY;AAQzBC,QAAAA,IAAI,EAAE;AARmB,OAAD,CAA1B;AAWAd,MAAAA,UAAU,CAACe,GAAX,CAAeC,GAAf,CAAmB,sBAAnB,EAA2C,EAA3C,EAA+CC,IAA/C,CAAqD,UAAAC,IAAI,EAAI;AAC3DC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaG,WAAtC;;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AAACvB,UAAAA,IAAI,EAAEmB,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaG;AAApB,SAAd;AACD,OAHD;AAKD;;;6BAEO;AACN,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAG,iBAAnB;AAAqC,QAAA,OAAO,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,CAFF,CADF;AAcD;;;;EA3C+B9B,KAAK,CAACgC,S;;SAAlB3B,G","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport PostCard from \"./components/SubReddit/PostCard\";\r\nimport SubInfo from \"./components/SubReddit/SubInfo\";\r\nimport \"./styles/styles.css\";\r\nimport * as RedditAPI from 'reddit-wrapper-v2';\r\n\r\nexport default class  App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      desc: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    var redditconn = RedditAPI({\r\n      username: process.env.REACT_APP_REDDIT_USERNAME,\r\n      password: process.env.REACT_APP_REDDIT_PASSWORD,\r\n      app_id : process.env.REACT_APP_APP_ID,\r\n      api_secret: process.env.REACT_APP_API_SECRET,\r\n      retry_on_wait: true,\r\n      retry_on_server_error: 5,\r\n      retry_delay: 1,\r\n      logs: true\r\n    });\r\n\r\n    redditconn.api.get('/r/LifeProTips/about', {}).then( data => {\r\n      console.log(\"Subreddit\", data[1].data.description);\r\n      this.setState({desc: data[1].data.description});\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"post-wrapper\">\r\n          <div className=\"column-1\">\r\n            <PostCard key = \"test\"/>\r\n          </div>\r\n          <div className=\"column-2\">\r\n            <SubInfo heading = \"About Community\" content = \"\" />\r\n            <SubInfo />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}