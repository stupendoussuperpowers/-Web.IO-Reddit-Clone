{"ast":null,"code":"import _classCallCheck from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\-Web.IO-Reddit-Clone\\\\src\\\\PhotoPage.js\";\nimport React from \"react\";\nimport PostCard from \"./components/SubReddit/PostCard\";\nimport SubInfo from \"./components/SubReddit/SubInfo\";\nimport \"./styles/styles.css\";\nimport * as RedditAPI from 'reddit-wrapper-v2';\nexport var redditconn = RedditAPI({\n  username: process.env.REACT_APP_REDDIT_USERNAME,\n  password: process.env.REACT_APP_REDDIT_PASSWORD,\n  app_id: process.env.REACT_APP_APP_ID,\n  api_secret: process.env.REACT_APP_API_SECRET,\n  retry_on_wait: true,\n  retry_on_server_error: 5,\n  retry_delay: 1,\n  logs: true\n});\n\nvar PhotoPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PhotoPage, _React$Component);\n\n  function PhotoPage(props) {\n    var _this;\n\n    _classCallCheck(this, PhotoPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PhotoPage).call(this, props));\n    _this.state = {\n      desc: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(PhotoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      redditconn.api.get('/r/funny/about', {}).then(function (data) {\n        console.log(\"Subreddit\", data[1].data);\n\n        _this2.setState({\n          desc: data[1].data.public_description,\n          icon: data[1].data.community_icon,\n          subreddit: data[1].data.title,\n          subs: data[1].data.subscribers\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(PostCard, {\n        key: \"test\",\n        url: \"/r/funny/comments/ethqk6/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(SubInfo, {\n        subs: this.state.subs,\n        heading: \"About Community\",\n        content: this.state.desc,\n        icon: this.state.icon,\n        subreddit: this.state.subreddit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PhotoPage;\n}(React.Component);\n\nexport { PhotoPage as default };","map":{"version":3,"sources":["E:/-Web.IO-Reddit-Clone/src/PhotoPage.js"],"names":["React","PostCard","SubInfo","RedditAPI","redditconn","username","process","env","REACT_APP_REDDIT_USERNAME","password","REACT_APP_REDDIT_PASSWORD","app_id","REACT_APP_APP_ID","api_secret","REACT_APP_API_SECRET","retry_on_wait","retry_on_server_error","retry_delay","logs","PhotoPage","props","state","desc","api","get","then","data","console","log","setState","public_description","icon","community_icon","subreddit","title","subs","subscribers","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAO,qBAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;AAEA,OAAO,IAAMC,UAAU,GAAGD,SAAS,CAAC;AAClCE,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,yBADY;AAElCC,EAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,yBAFY;AAGlCC,EAAAA,MAAM,EAAGL,OAAO,CAACC,GAAR,CAAYK,gBAHa;AAIlCC,EAAAA,UAAU,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJU;AAKlCC,EAAAA,aAAa,EAAE,IALmB;AAMlCC,EAAAA,qBAAqB,EAAE,CANW;AAOlCC,EAAAA,WAAW,EAAE,CAPqB;AAQlCC,EAAAA,IAAI,EAAE;AAR4B,CAAD,CAA5B;;IAYeC,S;;;;;AAEpB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFiB;AAKlB;;;;wCAEkB;AAAA;;AACjBlB,MAAAA,UAAU,CAACmB,GAAX,CAAeC,GAAf,CAAmB,gBAAnB,EAAqC,EAArC,EAAyCC,IAAzC,CAA+C,UAAAC,IAAI,EAAI;AACrDC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAjC;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAACP,UAAAA,IAAI,EAAEI,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaI,kBAApB;AACZC,UAAAA,IAAI,EAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaM,cADR;AAEZC,UAAAA,SAAS,EAAEP,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaQ,KAFZ;AAGdC,UAAAA,IAAI,EAAET,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaU;AAHL,SAAd;AAID,OAND;AAQD;;;6BAEO;AACN,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAG,MAAhB;AAAuB,QAAA,GAAG,EAAG,2BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAI,KAAKf,KAAL,CAAWc,IAA5B;AAAkC,QAAA,OAAO,EAAG,iBAA5C;AAA8D,QAAA,OAAO,EAAI,KAAKd,KAAL,CAAWC,IAApF;AAA0F,QAAA,IAAI,EAAI,KAAKD,KAAL,CAAWU,IAA7G;AAAmH,QAAA,SAAS,EAAI,KAAKV,KAAL,CAAWY,SAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF,CADF;AAYD;;;;EAjCqCjC,KAAK,CAACqC,S;;SAAxBlB,S","sourcesContent":["import React from \"react\";\r\nimport PostCard from \"./components/SubReddit/PostCard\";\r\nimport SubInfo from \"./components/SubReddit/SubInfo\";\r\nimport \"./styles/styles.css\";\r\nimport * as RedditAPI from 'reddit-wrapper-v2';\r\n\r\nexport const redditconn = RedditAPI({\r\n  username: process.env.REACT_APP_REDDIT_USERNAME,\r\n  password: process.env.REACT_APP_REDDIT_PASSWORD,\r\n  app_id : process.env.REACT_APP_APP_ID,\r\n  api_secret: process.env.REACT_APP_API_SECRET,\r\n  retry_on_wait: true,\r\n  retry_on_server_error: 5,\r\n  retry_delay: 1,\r\n  logs: true\r\n});\r\n\r\n\r\nexport default class  PhotoPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      desc: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    redditconn.api.get('/r/funny/about', {}).then( data => {\r\n      console.log(\"Subreddit\", data[1].data);\r\n      this.setState({desc: data[1].data.public_description, \r\n        icon : data[1].data.community_icon, \r\n        subreddit: data[1].data.title,\r\n      subs: data[1].data.subscribers });\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"post-wrapper\">\r\n          <div className=\"column-1\">\r\n            <PostCard key = \"test\" url = \"/r/funny/comments/ethqk6/\" />\r\n          </div>\r\n          <div className=\"column-2\">\r\n            <SubInfo subs = {this.state.subs} heading = \"About Community\" content = {this.state.desc} icon = {this.state.icon} subreddit = {this.state.subreddit}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}