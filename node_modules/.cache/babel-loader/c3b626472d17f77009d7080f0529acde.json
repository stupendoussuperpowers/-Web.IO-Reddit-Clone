{"ast":null,"code":"import _classCallCheck from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\-Web.IO-Reddit-Clone\\\\src\\\\TextPage.js\";\nimport React from \"react\";\nimport PostCard from \"./components/SubReddit/PostCard\";\nimport SubInfo from \"./components/SubReddit/SubInfo\";\nimport \"./styles/PostPage.css\";\nimport { withRouter } from 'react-router-dom';\nimport { redditconn } from './App';\n\nvar TextPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TextPage, _React$Component);\n\n  function TextPage(props) {\n    var _this;\n\n    _classCallCheck(this, TextPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TextPage).call(this, props));\n    _this.state = {\n      desc: \"\",\n      subredditName: _this.props.subreddit,\n      idPost: _this.props.id\n    };\n    return _this;\n  }\n\n  _createClass(TextPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      redditconn.api.get(\"/r/\".concat(this.state.subredditName, \"/about\"), {}).then(function (data) {\n        console.log(\"Subreddit\", data[1].data);\n\n        _this2.setState({\n          desc: data[1].data.public_description,\n          icon: data[1].data.community_icon,\n          subreddit: data[1].data.title,\n          subs: data[1].data.subscribers\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"post-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(PostCard, {\n        key: \"test\",\n        url: \"/r/\".concat(this.state.subredditName, \"/comments/\").concat(this.state.idPost, \"/\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(SubInfo, {\n        subs: this.state.subs,\n        heading: \"About Community\",\n        content: this.state.desc,\n        icon: this.state.icon,\n        subreddit: this.state.subreddit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return TextPage;\n}(React.Component);\n\nexport default withRouter(TextPage);","map":{"version":3,"sources":["E:/-Web.IO-Reddit-Clone/src/TextPage.js"],"names":["React","PostCard","SubInfo","withRouter","redditconn","TextPage","props","state","desc","subredditName","subreddit","idPost","id","api","get","then","data","console","log","setState","public_description","icon","community_icon","title","subs","subscribers","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAO,uBAAP;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,UAAR,QAAyB,OAAzB;;IAGMC,Q;;;;;AAEJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,aAAa,EAAE,MAAKH,KAAL,CAAWI,SAFf;AAGXC,MAAAA,MAAM,EAAE,MAAKL,KAAL,CAAWM;AAHR,KAAb;AAFiB;AAOlB;;;;wCAEkB;AAAA;;AACjBR,MAAAA,UAAU,CAACS,GAAX,CAAeC,GAAf,cAA0B,KAAKP,KAAL,CAAWE,aAArC,aAA4D,EAA5D,EAAgEM,IAAhE,CAAsE,UAAAC,IAAI,EAAI;AAC5EC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAjC;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAACX,UAAAA,IAAI,EAAEQ,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaI,kBAApB;AACZC,UAAAA,IAAI,EAAGL,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaM,cADR;AAEZZ,UAAAA,SAAS,EAAEM,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaO,KAFZ;AAGdC,UAAAA,IAAI,EAAER,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,CAAaS;AAHL,SAAd;AAID,OAND;AAQD;;;6BAEO;AACN,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAG,MAAhB;AAAuB,QAAA,GAAG,eAAU,KAAKlB,KAAL,CAAWE,aAArB,uBAA+C,KAAKF,KAAL,CAAWI,MAA1D,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAI,KAAKJ,KAAL,CAAWiB,IAA5B;AAAkC,QAAA,OAAO,EAAG,iBAA5C;AAA8D,QAAA,OAAO,EAAI,KAAKjB,KAAL,CAAWC,IAApF;AAA0F,QAAA,IAAI,EAAI,KAAKD,KAAL,CAAWc,IAA7G;AAAmH,QAAA,SAAS,EAAI,KAAKd,KAAL,CAAWG,SAA3I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF,CADF;AAYD;;;;EAnCoBV,KAAK,CAAC0B,S;;AAsC7B,eAAevB,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport PostCard from \"./components/SubReddit/PostCard\";\r\nimport SubInfo from \"./components/SubReddit/SubInfo\";\r\nimport \"./styles/PostPage.css\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {redditconn} from './App';\r\n\r\n\r\nclass TextPage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      desc: \"\",\r\n      subredditName: this.props.subreddit,\r\n      idPost: this.props.id\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    redditconn.api.get( `/r/${this.state.subredditName}/about`, {}).then( data => {\r\n      console.log(\"Subreddit\", data[1].data);\r\n      this.setState({desc: data[1].data.public_description, \r\n        icon : data[1].data.community_icon, \r\n        subreddit: data[1].data.title,\r\n      subs: data[1].data.subscribers });\r\n    })\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"post-wrapper\">\r\n          <div className=\"column-1\">\r\n            <PostCard key = \"test\" url = {`/r/${this.state.subredditName}/comments/${this.state.idPost}/`} />\r\n          </div>\r\n          <div className=\"column-2\">\r\n            <SubInfo subs = {this.state.subs} heading = \"About Community\" content = {this.state.desc} icon = {this.state.icon} subreddit = {this.state.subreddit}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TextPage);"]},"metadata":{},"sourceType":"module"}