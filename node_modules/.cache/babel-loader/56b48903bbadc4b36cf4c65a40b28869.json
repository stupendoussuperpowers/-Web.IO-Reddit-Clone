{"ast":null,"code":"import _classCallCheck from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\-Web.IO-Reddit-Clone\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\-Web.IO-Reddit-Clone\\\\src\\\\Something.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nvar Something =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Something, _Component);\n\n  function Something() {\n    _classCallCheck(this, Something);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Something).apply(this, arguments));\n  }\n\n  _createClass(Something, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Something;\n}(Component);\n\nexport default withRouter(Something);","map":{"version":3,"sources":["E:/-Web.IO-Reddit-Clone/src/Something.js"],"names":["React","Component","withRouter","Something"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;IAEMC,S;;;;;;;;;;;;;6BAEM;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAIH;;;;EAPmBF,S;;AAUxB,eAAeC,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass Something extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default withRouter(Something);"]},"metadata":{},"sourceType":"module"}